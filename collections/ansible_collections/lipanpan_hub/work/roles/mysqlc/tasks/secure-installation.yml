---
- name: 创建用户设置的mysql用户
  mysql_user:
    name: "{{ mysql_user_name }}"
    host: 'localhost'
    password: "{{ mysql_user_password }}"
    priv: '*.*:ALL,GRANT'
    state: present
  no_log: "{{ mysql_hide_passwords }}"
  when: mysql_user_name != mysql_root_username


# Has to be after the password assignment, for idempotency.
- name: 把用户设置的mysql用户的配置文件复制到 家目录
  ansible.builtin.template:
    src: "user-my.cnf.j2"
    dest: "{{ mysql_user_home }}/.my.cnf"
    owner: "{{ mysql_user_name }}"
    mode: 0600
  no_log: "{{ mysql_hide_passwords }}"
  when: >
    mysql_user_name != mysql_root_username
    and (mysql_install_packages | bool or mysql_user_password_update)


- name: 不允许mysql的root用户远程登录
  ansible.builtin.command: 'mysql -NBe "{{ item }}"'
  with_items:
    - DELETE FROM mysql.user WHERE User='{{ mysql_root_username }}' AND Host NOT IN ('localhost', '127.0.0.1', '::1')
  changed_when: false

- name: 读取root用户的host列 结果注册到 变量
  ansible.builtin.command: mysql -NBe "SELECT Host FROM mysql.user WHERE User = '{{ mysql_root_username }}' ORDER BY (Host='localhost') ASC"
  register: mysql_root_hosts
  changed_when: false
  check_mode: false
  when: mysql_install_packages | bool or mysql_root_password_update

# 这里没有使用 mysql_user模块 因为这个模块有问题 See: https://goo.gl/MSOejW
# 对于 MySQL >= 5.7.x 的版本 设置root密码 
- name: Update MySQL root password for localhost root account (5.7.x).
  ansible.builtin.shell: >
    mysql -u root -NBe "ALTER USER '{{ mysql_root_username }}'@'{{ item }}' IDENTIFIED WITH mysql_native_password BY '{{ mysql_root_password }}'; FLUSH PRIVILEGES;"
  no_log: "{{ mysql_hide_passwords }}"
  with_items: "{{ mysql_root_hosts.stdout_lines|default([]) }}"
  when: >
    ((mysql_install_packages | bool) or mysql_root_password_update)
    and ('5.7.' in mysql_cli_version.stdout or '8.0.' in mysql_cli_version.stdout)

# 对于 MySQL < 5.7.x的版本 更新 root密码
- name: Update MySQL root password for localhost root account (< 5.7.x).
  ansible.builtin.shell: >
    mysql -NBe 'SET PASSWORD FOR "{{ mysql_root_username }}"@"{{ item }}" = PASSWORD("{{ mysql_root_password }}"); FLUSH PRIVILEGES;'
  no_log: "{{ mysql_hide_passwords }}"
  with_items: "{{ mysql_root_hosts.stdout_lines|default([]) }}"
  when: >
    ((mysql_install_packages | bool) or mysql_root_password_update)
    and ('5.7.' not in mysql_cli_version.stdout and '8.0.' not in mysql_cli_version.stdout)



# Has to be after the root password assignment, for idempotency.
- name: 把root用户的配置文件复制到用户家目录
  ansible.builtin.template:
    src: "root-my.cnf.j2"
    dest: "{{ mysql_root_home }}/.my.cnf"
    owner: root
    group: root
    mode: 0600
  no_log: "{{ mysql_hide_passwords }}"
  when: mysql_install_packages | bool or mysql_root_password_update

- name: 获取匿名用户的host列表 并且注册到变量 
  ansible.builtin.command: mysql -NBe "SELECT Host FROM mysql.user WHERE User = ''"
  register: mysql_anonymous_hosts
  changed_when: false
  check_mode: false

- name: 移除匿名用户
  mysql_user:
    name: ""
    host: "{{ item }}"
    state: absent
  with_items: "{{ mysql_anonymous_hosts.stdout_lines|default([]) }}"

- name: 移除test数据库  
  mysql_db:
    name: 'test'
    state: absent

# 做完这些事情  mysql的安装算是彻底完成了 