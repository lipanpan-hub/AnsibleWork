---
# 这个文件会开始 

- name: 获取当前安装mysql的版本 返回结果注册到变量
  ansible.builtin.command: 'mysql --version'
  register: mysql_cli_version
  changed_when: false
  check_mode: false

- name: 把配置文件发送到etc目录下做全局配置
  ansible.builtin.template:
    src: my.cnf.j2
    dest: "{{ mysql_config_file }}"
    owner: root
    group: root
    mode: 0644
    force: "{{ overwrite_global_mycnf }}"
  notify: restart mysql

- name: 校验用户是否设置了 include files列表 
  ansible.builtin.file:
    path: "{{ mysql_config_include_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  when: mysql_config_include_files | length

- name: 把用户配置的include files复制到 include dir当中去 
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ mysql_config_include_dir }}/{{ item.src | basename }}"
    owner: root
    group: root
    mode: 0644
    force: "{{ item.force | default(False) }}"
  with_items: "{{ mysql_config_include_files }}"
  notify: restart mysql

- name: 创建慢查询日志文件 (if configured).
  ansible.builtin.command: "touch {{ mysql_slow_query_log_file }}"
  args:
    creates: "{{ mysql_slow_query_log_file }}"
  when: mysql_slow_query_log_enabled

- name: 创建存放数据文件夹
  ansible.builtin.file:
    path: "{{ mysql_datadir }}"
    state: directory
    owner: mysql
    group: mysql
    mode: 0755
    setype: mysqld_db_t

- name: 设置慢查询日志文件的权限 (if configured).
  ansible.builtin.file:
    path: "{{ mysql_slow_query_log_file }}"
    state: file
    owner: mysql
    group: "{{ mysql_log_file_group }}"
    mode: 0640
  when: mysql_slow_query_log_enabled

- name: 创建错误日志文件 (if configured).
  ansible.builtin.command: "touch {{ mysql_log_error }}"
  args:
    creates: "{{ mysql_log_error }}"
  when:
    - mysql_log | default(true)
    - mysql_log_error | default(false)
  tags: ['skip_ansible_galaxy']

- name: 设置错误日志文件的权限 (if configured).
  ansible.builtin.file:
    path: "{{ mysql_log_error }}"
    state: file
    owner: mysql
    group: "{{ mysql_log_file_group }}"
    mode: 0640
  when:
    - mysql_log | default(true)
    - mysql_log_error | default(false)
  tags: ['skip_ansible_galaxy']

- name: 启动mysql 并设置开机自启 返回结果注册到变量
  ansible.builtin.service:
    name: "{{ mysql_daemon }}"
    state: started
    enabled: "{{ mysql_enabled_on_startup }}"
  register: mysql_service_configuration

# 这里已经启动mysql 了还设置mysql 开机自启动了 后面 就开始执行 secure install
